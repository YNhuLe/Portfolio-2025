[
  {
    "id": "1",
    "title": "Zodiac Wander",
    "slug": "zodiac-web",
    "concept": "Zodiac Wander - Discover your zodiac sign, connect with your birth flower, explore traits, and share thoughts with others on a cosmic journey.",
    "tech_stack": ["React", "Express", "SCSS", "REST API"],
    "img_url": "/images/zodiac.png",
    "git_url": "https://github.com/YNhuLe/Pair-Programming",
    "description": "Zodiac Wander is an interactive web app where users can discover their zodiac sign, connect with their unique birth flower, explore personality traits, and share reflections with others on a cosmic journey. \nBuilt with React, Express, SCSS, and a custom REST API, the platform offers a smooth and visually engaging experience that blends astrology, nature, and community.",
    "info": [
      {
        "title": "Challenges.",
        "content": "Data Structure Complexity: Zodiac content (sign traits, horoscopes, dates, compatibility, icons, comments) required a well-organized but extensible data format. A complicated .json file structure posed readability, maintenance, and scalability issues.",
        "image": "/images/zodiac_challenges.png"
      },
      {
        "title": "Solution & Implementations.",
        "content": "Structured JSON Design: To address the complexity of handling detailed zodiac data, I implemented a JSON tree structure that allowed for logically nested and easily accessible information such as traits, compatibility, horoscopes, and user comments. This approach improved both maintainability and scalability.",
        "image": "/images/zodiac_solution.png"
      },
      {
        "title": "Results & Impacts.",
        "content": "The clean and organized JSON structure not only simplified data access and management on the front end, but also laid a solid foundation for future scalability. This made it easier to maintain consistency across components and ensured a smooth transition path for integrating or migrating to a backend system later on.",
        "image": "/images/zodiac_result.png"
      },
      {
        "title": "ðŸš€ Future Improvements",

        "content": "âœ… Migrate dynamic content like comments and horoscopes to a backend PostgreSQL.\nâœ… Focus on mobile-first responsiveness.\nâœ… Add an AI chatbot for real-time horoscope and flower personality interactions.\nâœ… Enable users to upload their own zodiac-related photos or messages.",

        "image": "/images/zodiac_future.png"
      }
    ],
    "screenshots": ["tralli-dashboard.png", "tralli-ai-subtasks.png"],
    "video_demo": {
      "url": "",
      "caption": ""
    }
  },
  {
    "id": "2",
    "title": "Evererdant",
    "slug": "evererdant-web",
    "concept": "Eververdant is a mobile-first web app that connects plant lovers to buy, sell, and share leafy tips with a thriving green-thumbed community.",
    "tech_stack": ["React", "TypeScript", "Tailwind", "AWS", "PostgreSQL"],
    "img_url": "/images/evererdant.png",
    "git_url": "https://github.com/YNhuLe/Flower_Love",
    "live_url": "https://main.d36o1v1jm7mlqn.amplifyapp.com/",
    "description": "Eververdant is a mobile-first web app that connects plant lovers to buy, sell, and share plant care tips within a thriving green-thumbed community.\nBuilt with React, TypeScript, Tailwind CSS, PostgreSQL and AWS, the platform delivers a fast, responsive, and community-driven experience for all things leafy and green. ðŸŒ¿",
    "info": [
      {
        "title": "Challenges.",
        "content": "With image-rich plant listings and user-generated uploads, Eververdant faced major performance issuesâ€”especially on slower mobile networks. The abundance of high-resolution images caused long load times and negatively impacted user experience and Core Web Vitals.",
        "image": "/images/ever_challenge.png"
      },
      {
        "title": "Solution & Implementations.",
        "content": "To address this, lazy loading was implemented for off-screen images. A CDN via AWS Amplify was integrated to ensure faster delivery of assets across geographic locations. Tailwind's utility-first styling helped reduce CSS bloat for leaner rendering.",
        "image": "/images/ever_solution.png"
      },
      {
        "title": "Results & Impacts.",
        "content": "Page load times improved by over 60%, especially on mobile devices. Bounce rates dropped, and user engagement rose as users experienced a smoother, faster interface. The performance boost directly contributed to better SEO rankings and overall user satisfaction.",
        "image": "/images/ever_result.png"
      },
      {
        "title": "ðŸš€ Future Improvements.",

        "content": "âœ… A future enhancement will include building a backend with custom APIs.\nâœ… Integrate a database to store user profiles, listings, and interactions.\nâœ… Allow users to fully engage with the platform in real time.",

        "image": "/images/ever_future.png"
      }
    ],

    "screenshots": ["tralli-dashboard.png", "tralli-ai-subtasks.png"],
    "video_demo": {
      "url": "",
      "caption": ""
    }
  },
  {
    "id": "3",
    "title": "Tralli",
    "slug": "tralli-web",
    "concept": "Tralli connects homeowners and property managers with skilled trade prosâ€”fast! From leaks to repairs, get trusted help when you need it most. ðŸ”¨",
    "tech_stack": ["Express", "React", "SCSS", "Firebase", "APIs", "MySQL"],
    "img_url": "/images/tralli2.png",
    "git_url": "https://github.com/YNhuLe/tralli_client",
    "description": "Tralli is a web platform that connects usersâ€”especially developers and property managersâ€”with trade companies offering services in building maintenance, apartment repairs, condo improvements, and townhome fixes. It acts as a trusted bridge between skilled trade professionals and property owners, streamlining the process of finding reliable, on-demand help for a wide range of construction, renovation, and repair needs.\n Built using React, Express, SCSS, Firebase, MySQL, and RESTful APIs, Tralli is designed to deliver a responsive, scalable, and efficient user experience for both service seekers and providers.",
    "info": [
      {
        "title": "Challenges.",
        "content": "Challenge: Integrating a secure and user-friendly Single Sign-On (SSO) system was complex. It required combining Firebase Authentication with MySQL to securely store user data while ensuring a seamless experience.",
        "image": "/images/tralli_challenge.png"
      },
      {
        "title": "Solution & Implementations.",
        "content": "Solution: Implemented Google Sign-In via Firebase Authentication and securely stored additional user information in a MySQL database. This setup streamlined the sign-up process and improved scalability.",
        "image": "/images/tralli_solution.png"
      },
      {
        "title": "Results & Impacts.",
        "content": "Result: Created a robust and secure sign-up/sign-in system that significantly enhanced user experience by reducing friction and increasing reliability.",
        "image": "/images/tralli_result.png"
      },
      {
        "title": "ðŸš€ Future Improvements.",
        "content": "âœ… Plan: To elevate platform engagement and support scalability, several enhancements will be introduced.\nâœ… Users will be able to favorite preferred providers for faster access.\nâœ… A direct messaging feature will allow real-time communication with service providers.\nâœ… An AI-powered chatbot will be integrated to assist users with common questions, service recommendations, and booking guidance 24/7.\nâœ… The chatbot will leverage user and provider data to offer personalized, context-aware support.\nâœ… This reduces the need for manual intervention and improves onboarding and retention.",
        "image": "/images/tralli_future.png"
      }
    ],
    "screenshots": ["tralli-dashboard.png", "tralli-ai-subtasks.png"],
    "video_demo": {
      "url": "",
      "caption": ""
    }
  },

  {
    "id": "4",
    "title": "TaskBloom",
    "slug": "taskbloom-web",
    "concept": "TaskBloom is a smart to-do app that uses AI to break tasks into actionable subtasks â€” helping you stay organized, focused, and productive.",
    "tech_stack": ["React", "Express", "SCSS", "Gemini API", "REST API"],
    "img_url": "/images/taskbloom.png",
    "git_url": "https://github.com/YNhuLe/Industry-Project-Team3-Server",
    "description": "TaskBloom is an intelligent to-do application designed to enhance productivity by leveraging AI to automatically break down complex tasks into manageable, actionable subtasks. This helps users stay organized, maintain focus, and achieve goals more efficiently. With an intuitive interface and smart task management features, TaskBloom supports daily planning and prioritization to keep users on track.\nThe app is built using React for a dynamic frontend, Express for backend services, styled with SCSS, and integrates the powerful Gemini API to deliver AI-driven task breakdowns. A custom REST API handles data communication, ensuring a smooth and responsive user experience.",
    "info": [
      {
        "title": "Challenges.",
        "content": "Challenge: Manual deployments slowed growth: 80% faster, reliable releasesChallenge: Manual deployments slowed growth: 80% faster, reliable releases",
        "image": "/images/zodiac.png"
      },
      {
        "title": "Solution & Implementations.",
        "content": "Challenge: Manual deployments slowed growth: 80% faster, reliable releases",
        "image": "/images/zodiac.png"
      },
      {
        "title": "Results & Impacts.",
        "content": "Challenge: Manual deployments slowed growth: 80% faster, reliable releases",
        "image": "/images/zodiac.png"
      },
      {
        "title": "ðŸš€ Future Improvements.",
        "content": "âœ… Plan: To elevate platform engagement and support scalability, several enhancements will be introduced.\nâœ… Users will be able to favorite preferred providers for faster access.\nâœ… A direct messaging feature will allow real-time communication with service providers.\nâœ… An AI-powered chatbot will assist users with common questions, service recommendations, and booking guidance 24/7.\nâœ… The chatbot will leverage user and provider data to offer personalized, context-aware support.\nâœ… A dedicated user profile page will allow users to manage preferences, bookings, and history.\nâœ… Real-time commenting functionality will enable users to engage with content and services more interactively.\nâœ… These features will reduce manual intervention and improve both onboarding and long-term retention.",
        "image": "/images/tralli_future.png"
      }
    ],
    "screenshots": ["tralli-dashboard.png", "tralli-ai-subtasks.png"],
    "video_demo": {
      "url": "https://github.com/YNhuLe/tralli_server/blob/main/README.md",
      "caption": ""
    }
  }
]
 




