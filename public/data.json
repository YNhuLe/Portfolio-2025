[
  {
    "id": "1",
    "title": "Zodiac Wander",
    "slug": "zodiac-web",
    "concept": "Zodiac Wander - Discover your zodiac sign, connect with your birth flower, explore traits, and share thoughts with others on a cosmic journey.",
    "tech_stack": ["React", "Express", "SCSS", "REST API"],
    "img_url": "/images/zodiac.png",
    "git_url": "https://github.com/YNhuLe/Pair-Programming",
    "info": [
      {
        "title": "Challenges.",
        "content": "Data Structure Complexity: Zodiac content (sign traits, horoscopes, dates, compatibility, icons, comments) required a well-organized but extensible data format. A complicated .json file structure posed readability, maintenance, and scalability issues.",
        "image": "/images/zodiac_challenges.png"
      },
      {
        "title": "Solution & Implementations.",
        "content": "Structured JSON Design: To address the complexity of handling detailed zodiac data, I implemented a JSON tree structure that allowed for logically nested and easily accessible information such as traits, compatibility, horoscopes, and user comments. This approach improved both maintainability and scalability.",
        "image": "/images/zodiac_solution.png"
      },
      {
        "title": "Results & Impacts.",
        "content": "Scalable Structure: The clean JSON structure simplified data access and made future backend migration easier.",
        "image": "/images/zodiac_result.png"
      },
      {
        "title": "ðŸš€ Future Improvements",
        "content": "Migrate dynamic content like comments and horoscopes to a backend (e.g., MySQl, PostgreSQL). The site will support multiple languages, introduce real-time zodiac compatibility quizzes, and be hosted with a mobile-first responsive design focus.",
        "image": "/images/zodiac_future.png"
      }
    ],
    "screenshots": ["tralli-dashboard.png", "tralli-ai-subtasks.png"],
    "video_demo": {
      "url": "",
      "caption": ""
    }
  },
  {
    "id": "2",
    "title": "Evererdant",
    "slug": "evererdant-web",
    "concept": "Eververdant is a mobile-first web app that connects plant lovers to buy, sell, and share leafy tips with a thriving green-thumbed community.",
    "tech_stack": ["React", "TypeScript", "Tailwind", "AWS"],
    "img_url": "/images/evererdant.png",
    "git_url": "https://github.com/YNhuLe/Flower_Love",
    "live_url": "https://main.d36o1v1jm7mlqn.amplifyapp.com/",
    "info": [
      {
        "title": "Challenges.",
        "content": "With image-rich plant listings and user-generated uploads, Eververdant faced major performance issuesâ€”especially on slower mobile networks. The abundance of high-resolution images caused long load times and negatively impacted user experience and Core Web Vitals.",
        "image": "/images/ever_challenge.png"
      },
      {
        "title": "Solution & Implementations.",
        "content": "To address this, lazy loading was implemented for off-screen images. A CDN via AWS Amplify was integrated to ensure faster delivery of assets across geographic locations. Tailwind's utility-first styling helped reduce CSS bloat for leaner rendering.",
        "image": "/images/ever_solution.png"
      },
      {
        "title": "Results & Impacts.",
        "content": "Page load times improved by over 60%, especially on mobile devices. Bounce rates dropped, and user engagement rose as users experienced a smoother, faster interface. The performance boost directly contributed to better SEO rankings and overall user satisfaction.",
        "image": "/images/ever_result.png"
      },
      {
        "title": "ðŸš€ Future Improvements.",
        "content": "A future enhancement will include building a backend with custom APIs and integrating a database to store user profiles, listings, and interactionsâ€”allowing users to fully engage with the platform in real time.",
        "image": "/images/ever_future.png"
      }
    ],

    "screenshots": ["tralli-dashboard.png", "tralli-ai-subtasks.png"],
    "video_demo": {
      "url": "",
      "caption": ""
    }
  },
  {
    "id": "3",
    "title": "Tralli",
    "slug": "tralli-web",
    "concept": "Tralli connects homeowners and property managers with skilled trade prosâ€”fast! From leaks to repairs, get trusted help when you need it most. ðŸ”¨",
    "tech_stack": ["Express", "React", "SCSS", "Firebase", "APIs", "MySQL"],
    "img_url": "/images/tralli2.png",
    "git_url": "https://github.com/YNhuLe/tralli_client",
    "info": [
      {
        "title": "Challenges.",
        "content": "Challenge: Integrating a secure and user-friendly Single Sign-On (SSO) system was complex. It required combining Firebase Authentication with MySQL to securely store user data while ensuring a seamless experience.",
        "image": "/images/tralli_challenge.png"
      },
      {
        "title": "Solution & Implementations.",
        "content": "Solution: Implemented Google Sign-In via Firebase Authentication and securely stored additional user information in a MySQL database. This setup streamlined the sign-up process and improved scalability.",
        "image": "/images/tralli_solution.png"
      },
      {
        "title": "Results & Impacts.",
        "content": "Result: Created a robust and secure sign-up/sign-in system that significantly enhanced user experience by reducing friction and increasing reliability.",
        "image": "/images/tralli_result.png"
      },
      {
        "title": "ðŸš€ Future Improvements.",
        "content": "Plan: To elevate platform engagement and support scalability, several enhancements will be introduced. Users will be able to favorite preferred providers for faster access, and a direct messaging feature will allow real-time communication with service providers. Additionally, an AI-powered chatbot will be integrated to assist users with common questions, service recommendations, and booking guidance 24/7. This chatbot will leverage user and provider data to offer personalized, context-aware support, reducing the need for manual intervention and improving onboarding and retention.",
        "image": "/images/tralli_future.png"
      }
    ],
    "screenshots": ["tralli-dashboard.png", "tralli-ai-subtasks.png"],
    "video_demo": {
      "url": "",
      "caption": ""
    }
  },
  {
    "id": "4",
    "title": "Blogs-Life",
    "slug": "bloglife-web",
    "concept": "Blogs-Life â€” a chill space to share your thoughts, ideas, and stories. From tech to daily vibes, whateverâ€™s on your mind, this is your place to be heard. Where your stories come to life. ðŸ’¬",
    "tech_stack": ["Python", "Flask", "PostgreSQL", "APIs", "Docker"],
    "img_url": "/images/blogs.png",
    "git_url": "https://github.com/YNhuLe/Blogging_Life_Out",
    "info": [
      {
        "title": "Challenges.",
        "content": "Challenge: While integrating Bootstrap 5.3.3 into my Flask app, I encountered layout and component issues caused by an outdated or incompatible version of Flask-Bootstrap. Components like the navbar and modals didnâ€™t behave as expected, and newer utility classes were ineffective. This slowed UI development and caused inconsistencies across devices.",
        "image": "/images/tralli_issue.png"
      },
      {
        "title": "Solution & Implementations.",
        "content": "Solution: I identified that the installed Flask-Bootstrap package was not fully compatible with Bootstrap 5.3.3. To fix this, I uninstalled the outdated package and installed the correct `flask-bootstrap5` library. This restored support for the full range of Bootstrap 5 components. I then updated templates to reflect the proper markup and ensured clean integration with Bootstrap 5â€™s JavaScript modules.",
        "image": "/images/tralli_solution.png"
      },
      {
        "title": "Results & Impacts.",
        "content": "Result: After switching to the correct version of Flask-Bootstrap, the UI rendered correctly, and all layout components worked smoothly. This reduced development friction, improved responsiveness, and ensured a consistent user experience across browsers and devices.",
        "image": "/images/tralli_result.png"
      },
      {
        "title": "ðŸš€ Future Improvements.",
        "content": "Plan: To future-proof the frontend, I plan to decouple Bootstrap integration entirely from Flask templating, allowing full control via CDN or bundlers like Vite or Webpack. This will make it easier to adopt future Bootstrap updates, optimize asset loading, and potentially integrate modern component libraries like Tailwind or React-based UIs.",
        "image": "/images/tralli_future.png"
      }
    ],
    "screenshots": ["tralli-dashboard.png", "tralli-ai-subtasks.png"],
    "video_demo": {
      "url": "",
      "caption": ""
    }
  },
  {
    "id": "5",
    "title": "TaskBloom",
    "slug": "taskbloom-web",
    "concept": "TaskBloom is a smart to-do app that uses AI to break tasks into actionable subtasks â€” helping you stay organized, focused, and productive.",
    "tech_stack": ["React", "Express", "SCSS", "Gemini API", "REST API"],
    "img_url": "/images/taskbloom.png",
    "git_url": "https://github.com/YNhuLe/Industry-Project-Team3-Server",
    "info": [
      {
        "title": "Challenges.",
        "content": "Challenge: Manual deployments slowed growth: 80% faster, reliable releasesChallenge: Manual deployments slowed growth: 80% faster, reliable releases",
        "image": "/images/zodiac.png"
      },
      {
        "title": "Solution & Implementations.",
        "content": "Challenge: Manual deployments slowed growth: 80% faster, reliable releases",
        "image": "/images/zodiac.png"
      },
      {
        "title": "Results & Impacts.",
        "content": "Challenge: Manual deployments slowed growth: 80% faster, reliable releases",
        "image": "/images/zodiac.png"
      },
      {
        "title": "ðŸš€ Future Improvements.",
        "content": "Plan: To elevate platform engagement and support scalability, several enhancements will be introduced. Users will be able to favorite preferred providers for faster access, and a direct messaging feature will allow real-time communication with service providers. Additionally, an AI-powered chatbot will be integrated to assist users with common questions, service recommendations, and booking guidance 24/7. This chatbot will leverage user and provider data to offer personalized, context-aware support, reducing the need for manual intervention and improving onboarding and retention.",
        "image": "/images/tralli_future.png"
      }
    ],
    "screenshots": ["tralli-dashboard.png", "tralli-ai-subtasks.png"],
    "video_demo": {
      "url": "",
      "caption": ""
    }
  }
]
 




